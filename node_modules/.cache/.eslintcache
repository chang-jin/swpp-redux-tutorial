[{"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/index.js":"1","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/App.js":"2","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/serviceWorker.js":"3","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/TodoList.js":"4","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js":"5","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/components/TodoDetail/TodoDetail.js":"6","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/components/Todo/Todo.js":"7","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/reducers/todo.js":"8","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/actions/actionTypes.js":"9","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/RealDetail/RealDetail.js":"10","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/actions/index.js":"11","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/actions/todo.js":"12"},{"size":857,"mtime":1632442634562,"results":"13","hashOfConfig":"14"},{"size":804,"mtime":1632441309049,"results":"15","hashOfConfig":"14"},{"size":4951,"mtime":1632391552923,"results":"16","hashOfConfig":"14"},{"size":1964,"mtime":1632444048291,"results":"17","hashOfConfig":"14"},{"size":1413,"mtime":1632443087047,"results":"18","hashOfConfig":"14"},{"size":690,"mtime":1632391552923,"results":"19","hashOfConfig":"14"},{"size":490,"mtime":1632440608562,"results":"20","hashOfConfig":"14"},{"size":1608,"mtime":1632443824246,"results":"21","hashOfConfig":"14"},{"size":189,"mtime":1632438870637,"results":"22","hashOfConfig":"14"},{"size":1292,"mtime":1632443646525,"results":"23","hashOfConfig":"14"},{"size":76,"mtime":1632444107160,"results":"24","hashOfConfig":"14"},{"size":1560,"mtime":1632443880158,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1v7u1xq",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/index.js",[],["54","55"],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/App.js",[],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/serviceWorker.js",[],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/TodoList.js",["56"],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js",["57"],"import React, { Component } from 'react';\n\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport * as actionCreators from '../../../store/actions/index';\n\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n  state = {\n    title: '',\n    content: '',\n    submitted: false,\n  }\n\n  postTodoHandler = () => {\n    this.props.onStoreTodo(this.state.title, this.state.content);\n    this.setState({ submitted: true });\n  }\n\n  render() {\n    let redirect = null;\n    if (this.state.submitted) {\n      redirect = <Redirect to='/todos' />\n    }\n    return (\n      <div className=\"NewTodo\">\n        {redirect}\n        <h1>Add a Todo</h1>\n        <label>Title</label>\n        <input type=\"text\" value={this.state.title}\n          onChange={(event) => this.setState({ title: event.target.value })} />\n        <label>Content</label>\n        <textarea rows=\"4\" type=\"text\" value={this.state.content}\n          onChange={(event) => this.setState({ content: event.target.value })} />\n        <button onClick={() => this.postTodoHandler()}>Submit</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    onStoreTodo: (title, content) =>\n    dispatch(actionCreators.postTodo({title: title, content:\n   content})),\n    };   \n}\n\n\n\nexport default connect(null, mapDispatchToProps)(NewTodo);","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/components/TodoDetail/TodoDetail.js",[],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/components/Todo/Todo.js",[],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/reducers/todo.js",["58"],"import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n todos: [ \n    { id: 1, title: 'SWPP', content: 'take swpp class', done: true },\n    { id: 2, title: 'Movie', content: 'watch movie', done: false },\n    { id: 3, title: 'Dinner', content: 'eat dinner', done: false }\n    ], \n    selectedTodo: null\n};\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        \n        case actionTypes.ADD_TODO:       \n            const newTodo = {\n                id: state.todos.length + 1, \n                title: action.title, content: action.content, done:false\n            }\n            return {...state, todos: [...state.todos, newTodo]};\n\n        case actionTypes.DELETE_TODO:\n            const deleted = state.todos.filter((todo) => {\n                return todo.id !== action.targetID;\n            });\n            return { ...state, todos: deleted };\n\n        case actionTypes.TOGGLE_DONE:\n            const modified = state.todos.map((todo) => {\n            if (todo.id === action.targetID) {\n                return { ...todo, done: !todo.done };\n            } \n            else {\n                return { ...todo };\n            }\n            });\n            return { ...state, todos: modified };\n\n        case actionTypes.GET_TODO:\n            const target = state.todos.find(td => td.id === action.targetID);\n            return { ...state, selectedTodo: action.target };\n\n        case actionTypes.GET_ALL:\n            return {...state, todos: action.todos };\n\n        default:\n            break;\n    }\n        \n    return state;\n}\n\nexport default reducer;","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/actions/actionTypes.js",[],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/RealDetail/RealDetail.js",["59","60"],"import React from 'react';\n\nimport './RealDetail.css';\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../../store/actions/index';\n\nclass RealDetail extends React.Component {\n\n  componentDidMount(){\n    this.props.onGetTodo(parseInt(this.props.match.params.id));\n  }\n\n  render() {\n    let title= '';\n    let content='';\n    if(this.props.selectedTodo){\n      title = this.props.selectedTodo.title;\n      content = this.props.selectedTodo.content;\n    }\n    return (\n      < div className=\"RealDetail\" >\n        <div className=\"row\">\n          <div className=\"left\">\n            Name:\n        </div>\n          <div className=\"right\">\n            {this.props.selectedTodo.title}\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"left\">\n            Content:\n        </div>\n          <div className=\"right\">\n            {this.props.selectedTodo.content}\n          </div>\n        </div>\n      </div >\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n    return {\n        selectedTodo: state.td.selectedTodo,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetTodo: id =>\n          dispatch(actionCreators.getTodo(id)),\n    };\n};\n   \nexport default connect(mapStateToProps, mapDispatchToProps)(RealDetail);","/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/actions/index.js",[],"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/store/actions/todo.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":11,"column":13,"nodeType":"67","messageId":"68","endLine":11,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":5,"column":13,"nodeType":"67","messageId":"68","endLine":5,"endColumn":24},{"ruleId":"65","severity":1,"message":"69","line":39,"column":19,"nodeType":"67","messageId":"68","endLine":39,"endColumn":25},{"ruleId":"65","severity":1,"message":"70","line":17,"column":7,"nodeType":"67","messageId":"68","endLine":17,"endColumn":12},{"ruleId":"65","severity":1,"message":"71","line":18,"column":7,"nodeType":"67","messageId":"68","endLine":18,"endColumn":14},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'actionTypes' is defined but never used.","Identifier","unusedVar","'target' is assigned a value but never used.","'title' is assigned a value but never used.","'content' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]