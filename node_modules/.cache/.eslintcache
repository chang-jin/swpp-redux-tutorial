[{"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\index.js":"1","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\App.js":"2","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\serviceWorker.js":"3","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\reducers\\todo.js":"4","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\components\\TodoDetail\\TodoDetail.js":"5","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\containers\\TodoList\\NewTodo\\NewTodo.js":"6","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\containers\\TodoList\\TodoList.js":"7","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\actions\\actionTypes.js":"8","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\actions\\index.js":"9","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\components\\Todo\\Todo.js":"10","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\actions\\todo.js":"11","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\containers\\TodoList\\RealDetail\\RealDetail.js":"12"},{"size":1061,"mtime":1632398105348,"results":"13","hashOfConfig":"14"},{"size":826,"mtime":1632397564975,"results":"15","hashOfConfig":"14"},{"size":5086,"mtime":1632391389805,"results":"16","hashOfConfig":"14"},{"size":1669,"mtime":1632396764579,"results":"17","hashOfConfig":"14"},{"size":723,"mtime":1632391389792,"results":"18","hashOfConfig":"14"},{"size":1604,"mtime":1632398291930,"results":"19","hashOfConfig":"14"},{"size":1850,"mtime":1632397883024,"results":"20","hashOfConfig":"14"},{"size":193,"mtime":1632391971134,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1632396516220,"results":"22","hashOfConfig":"14"},{"size":546,"mtime":1632393355192,"results":"23","hashOfConfig":"14"},{"size":1766,"mtime":1632396614799,"results":"24","hashOfConfig":"14"},{"size":1656,"mtime":1632396631007,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ttangi",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\index.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\App.js",[],["54","55"],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\serviceWorker.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\reducers\\todo.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\components\\TodoDetail\\TodoDetail.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\containers\\TodoList\\NewTodo\\NewTodo.js",["56"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../store/actions/actionTypes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './NewTodo.css';\r\nimport * as actionCreators from \"../../../store/actions\";\r\n\r\nclass NewTodo extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        submitted: false,\r\n    }\r\n\r\n    postTodoHandler = () => {\r\n        this.props.onStoreTodo(this.state.title, this.state.content);\r\n        this.setState({ submitted: true });\r\n    }\r\n\r\n    render() {\r\n        let redirect = null;\r\n        if (this.state.submitted) {\r\n        redirect = <Redirect to='/todos' />\r\n        }\r\n        return (\r\n            <div className=\"NewTodo\">\r\n                {redirect}\r\n                <h1>Add a Todo</h1>\r\n                <label>Title</label>\r\n                <input type=\"text\" value={this.state.title}\r\n                    onChange={(event) => this.setState({ title: event.target.value })} />\r\n                <label>Content</label>\r\n                <textarea rows=\"4\" type=\"text\" value={this.state.content}\r\n                    onChange={(event) => this.setState({ content: event.target.value })} />\r\n                <button onClick={() => this.postTodoHandler()}>Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onStoreTodo: (title, content) =>\r\n            dispatch(actionCreators.postTodo({title: title, content: content})),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NewTodo);","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\containers\\TodoList\\TodoList.js",["57","58"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Todo from '../../components/Todo/Todo';\r\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\r\nimport './TodoList.css';\r\nimport { withRouter } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport * as actionCreators from '../../store/actions/index';\r\n\r\nclass TodoList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onGetAll();\r\n    }\r\n\r\n    clickTodoHandler = (td) => {\r\n        this.props.history.push('/todos/' + td.id);\r\n    }\r\n\r\n    render() {\r\n        const todos = this.props.storedTodos.map((td) => {\r\n        return (\r\n            <Todo\r\n                key={td.id}\r\n                title={td.title}\r\n                done={td.done}\r\n                clickDetail={() => this.clickTodoHandler(td)}\r\n                clickDone={() => this.props.onToggleTodo(td.id)}\r\n                clickDelete={() => this.props.onDeleteTodo(td.id)}\r\n            />);\r\n        });\r\n\r\n        return (\r\n            <div className=\"TodoList\">\r\n                <div className=\"title\">{this.props.title}</div>\r\n                <div className=\"todos\">{todos}</div>\r\n                <NavLink to='/new-todo' exact>New Todo</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      storedTodos: state.td.todos\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleTodo: (id) =>\r\n            dispatch(actionCreators.toggleTodo(id)),\r\n        onDeleteTodo: (id) =>\r\n            dispatch(actionCreators.deleteTodo(id)),\r\n        onGetAll: () => dispatch(actionCreators.getTodos()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));","C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\actions\\index.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\components\\Todo\\Todo.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\store\\actions\\todo.js",[],"C:\\Users\\queis\\SWPP_Projects\\week-4-practice\\src\\containers\\TodoList\\RealDetail\\RealDetail.js",["59"],"import * as actionTypes from \"../../../store/actions/actionTypes\";\r\nimport { connect } from 'react-redux';\r\nimport {Component} from \"react\";\r\nimport * as actionCreators from \"../../../store/actions/todo\";\r\n\r\nclass RealDetail extends Component {\r\n\r\n    componentDidMount() {\r\n        // itâ€™s safe to get state after component mounted. Note: id is given as string.\r\n        this.props.onGetTodo(parseInt(this.props.match.params.id));\r\n    }\r\n\r\n    render() {\r\n        let title = '';\r\n        let content = '';\r\n        if (this.props.selectedTodo) {\r\n            title = this.props.selectedTodo.title;\r\n            content = this.props.selectedTodo.content;\r\n        }\r\n        return (\r\n            <div className=\"RealDetail\" >\r\n                <div className=\"row\">\r\n                    <div className=\"left\">\r\n                        Name:\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        {title}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"left\">\r\n                        Content:\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedTodo: state.td.selectedTodo,\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetTodo: (id) =>\r\n            dispatch(actionCreators.getTodo(id)),\r\n\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RealDetail);",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":3,"column":13,"nodeType":"66","messageId":"67","endLine":3,"endColumn":24},{"ruleId":"64","severity":1,"message":"68","line":4,"column":8,"nodeType":"66","messageId":"67","endLine":4,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":8,"column":13,"nodeType":"66","messageId":"67","endLine":8,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":1,"column":13,"nodeType":"66","messageId":"67","endLine":1,"endColumn":24},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'actionTypes' is defined but never used.","Identifier","unusedVar","'TodoDetail' is defined but never used.","no-global-assign","no-unsafe-negation"]