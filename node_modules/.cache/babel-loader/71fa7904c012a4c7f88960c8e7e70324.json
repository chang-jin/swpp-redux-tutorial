{"ast":null,"code":"var _jsxFileName = \"/Users/kimnamgi/Desktop/swpp-redux-tutorial/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport todoReducer from './store/reducers/todo';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state = {}, action) => {\n  return state;\n};\n\nconst rootReducer = combineReducers({\n  td: todoReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk)); // const store = createStore((state = {}, action) => state);\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 31\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 5\n}, this), document.getElementById('root')); // ReactDOM.render();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/kimnamgi/Desktop/swpp-redux-tutorial/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","combineReducers","Provider","todoReducer","applyMiddleware","thunk","reducer","state","action","rootReducer","td","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AAClC,SAAOD,KAAP;AACH,CAFD;;AAIA,MAAME,WAAW,GAAGR,eAAe,CAAC;AAChCS,EAAAA,EAAE,EAAEP;AAD4B,CAAD,CAAnC;AAIA,MAAMQ,KAAK,GAAGX,WAAW,CAACS,WAAD,EAAcL,eAAe,CAACC,KAAD,CAA7B,CAAzB,C,CACA;;AAEAR,QAAQ,CAACe,MAAT,eACI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAID,KAAnB;AAAA,yBAA0B,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,QADJ,EACkDE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADlD,E,CAIA;AAEA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers } from 'redux';\nimport {Provider} from 'react-redux';\nimport todoReducer from './store/reducers/todo';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst reducer = (state={}, action) => {\n    return state;\n}\n\nconst rootReducer = combineReducers({\n    td: todoReducer,\n})\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n// const store = createStore((state = {}, action) => state);\n\nReactDOM.render(\n    <Provider store = {store}><App /></Provider>, document.getElementById('root')\n);\n\n// ReactDOM.render();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}