{"ast":null,"code":"var _jsxFileName = \"/Users/hursuhyun/Documents/Univ/School/3rd/3Fall/swpp/Lab/practice4/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.clickTodoHandler = td => {\n      this.props.history.push('/todos/' + td.id);\n\n      if (this.state.selectedTodo === td) {\n        this.setState({ ...this.state,\n          selectedTodo: null\n        });\n      } else {\n        this.setState({ ...this.state,\n          selectedTodo: td\n        });\n      }\n    };\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clickDetail: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDelete: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch({\n      type: actionTypes.TOGGLE_DONE,\n      targetID: id\n    }),\n    onDeleteTodo: id => dispatch({\n      type: actionTypes.DELETE_TODO,\n      targetID: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null)(TodoList);","map":{"version":3,"sources":["/Users/hursuhyun/Documents/Univ/School/3rd/3Fall/swpp/Lab/practice4/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","Todo","TodoDetail","NavLink","connect","actionTypes","TodoList","state","clickTodoHandler","td","props","history","push","id","selectedTodo","setState","render","todos","storedTodos","map","title","done","onToggleTodo","onDeleteTodo","todo","content","mapStateToProps","mapDispatchToProps","dispatch","type","TOGGLE_DONE","targetID","DELETE_TODO"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\n\nimport { NavLink } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nclass TodoList extends Component {\n  state = {\n  }\n\n  clickTodoHandler = (td) => {\n    this.props.history.push('/todos/'+td.id);\n    if (this.state.selectedTodo === td) {\n      this.setState({ ...this.state, selectedTodo: null });\n    } else {\n      this.setState({ ...this.state, selectedTodo: td });\n    }\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clickDetail={() => this.clickTodoHandler(td)}\n          clickDone={() => this.props.onToggleTodo(td.id)}\n          clickDelete={() => this.props.onDeleteTodo(td.id)} \n      />);\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = <TodoDetail\n        title={this.state.selectedTodo.title}\n        content={this.state.selectedTodo.content}\n      />\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to='/new-todo' exact>New Todo</NavLink>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return{\n    storedTodos: state.td.todos\n  };\n};\n\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: (id) =>\n      dispatch({ type: actionTypes.TOGGLE_DONE, targetID: id }),\n    onDeleteTodo: (id) =>\n      dispatch({ type: actionTypes.DELETE_TODO, targetID: id }),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null)(TodoList)"]},"metadata":{},"sourceType":"module"}