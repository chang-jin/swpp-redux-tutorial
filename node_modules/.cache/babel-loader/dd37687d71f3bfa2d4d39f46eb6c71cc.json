{"ast":null,"code":"var _jsxFileName = \"/home/cw10108/swpp/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport * as actionTypes from './';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch({\n      type: actionTypes.TOGGLE_DONE,\n      targetID: id\n    }),\n    onDeleteTodo: id => dispatch({\n      tyoe: actionTypes.DELETE_TODO,\n      targetID: id\n    })\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTodo: null\n    };\n\n    this.clickTodoHandler = td => {\n      if (this.state.selectedTodo === td) {\n        this.setState({ ...this.state,\n          selectedTodo: null\n        });\n      } else {\n        this.setState({ ...this.state,\n          selectedTodo: td\n        });\n      }\n    };\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clicked: () => this.clickTodoHandler(td)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, null)(TodoList);","map":{"version":3,"sources":["/home/cw10108/swpp/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","connect","Todo","TodoDetail","actionTypes","NavLink","mapDispatchToProps","dispatch","onToggleTodo","id","type","TOGGLE_DONE","targetID","onDeleteTodo","tyoe","DELETE_TODO","mapStateToProps","state","storedTodos","td","todos","TodoList","selectedTodo","clickTodoHandler","setState","render","props","map","title","done","todo","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAO,gBAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,IAA7B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AACpC,SAAO;AACLC,IAAAA,YAAY,EAAEC,EAAD,IACbF,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACN,WAAW,CAACO,WAAlB;AAA+BC,MAAAA,QAAQ,EAACH;AAAxC,KAAD,CAFH;AAGPI,IAAAA,YAAY,EAAEJ,EAAD,IACXF,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAACV,WAAW,CAACW,WAAlB;AAA+BH,MAAAA,QAAQ,EAACH;AAAxC,KAAD;AAJH,GAAP;AAMD,CAPD;;AASA,MAAMO,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAO;AACLC,IAAAA,WAAW,EAACD,KAAK,CAACE,EAAN,CAASC;AADhB,GAAP;AAGD,CAJD;;AAKA,MAAMC,QAAN,SAAuBrB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BiB,KAD+B,GACvB;AACNK,MAAAA,YAAY,EAAE;AADR,KADuB;;AAAA,SAK/BC,gBAL+B,GAKXJ,EAAD,IAAQ;AACzB,UAAI,KAAKF,KAAL,CAAWK,YAAX,KAA4BH,EAAhC,EAAoC;AAClC,aAAKK,QAAL,CAAc,EAAE,GAAG,KAAKP,KAAV;AAAiBK,UAAAA,YAAY,EAAE;AAA/B,SAAd;AACD,OAFD,MAEO;AACL,aAAKE,QAAL,CAAc,EAAE,GAAG,KAAKP,KAAV;AAAiBK,UAAAA,YAAY,EAAEH;AAA/B,SAAd;AACD;AACF,KAX8B;AAAA;;AAa/BM,EAAAA,MAAM,GAAG;AACP,UAAML,KAAK,GAAG,KAAKM,KAAL,CAAWR,WAAX,CAAuBS,GAAvB,CAA4BR,EAAD,IAAQ;AAC/C,0BACE,QAAC,IAAD;AAEE,QAAA,KAAK,EAAEA,EAAE,CAACS,KAFZ;AAGE,QAAA,IAAI,EAAET,EAAE,CAACU,IAHX;AAIE,QAAA,OAAO,EAAE,MAAM,KAAKN,gBAAL,CAAsBJ,EAAtB;AAJjB,SACOA,EAAE,CAACV,EADV;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARa,CAAd;AAUA,QAAIqB,IAAI,GAAG,IAAX;;AACA,QAAI,KAAKb,KAAL,CAAWK,YAAf,EAA6B;AAC3BQ,MAAAA,IAAI,gBAAG,QAAC,UAAD;AACL,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWK,YAAX,CAAwBM,KAD1B;AAEL,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWK,YAAX,CAAwBS;AAF5B;AAAA;AAAA;AAAA;AAAA,cAAP;AAID;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwB,KAAKL,KAAL,CAAWE;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBR;AAAxB;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGU,IAHH,eAIE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,WAAZ;AAAwB,QAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAvC8B;;AA0CjC,eAAe7B,OAAO,CAACe,eAAD,EAAkB,IAAlB,CAAP,CAA+BK,QAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport * as actionTypes from './'\nimport { NavLink } from 'react-router-dom';\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    onToggleTodo:(id) => \n    dispatch({type:actionTypes.TOGGLE_DONE, targetID:id}),\n  onDeleteTodo:(id) =>\n    dispatch({tyoe:actionTypes.DELETE_TODO, targetID:id}),\n  };\n};\n\nconst mapStateToProps = state =>{\n  return {\n    storedTodos:state.td.todos\n  };\n};\nclass TodoList extends Component {\n  state = {\n    selectedTodo: null,\n  }\n\n  clickTodoHandler = (td) => {\n    if (this.state.selectedTodo === td) {\n      this.setState({ ...this.state, selectedTodo: null });\n    } else {\n      this.setState({ ...this.state, selectedTodo: td });\n    }\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clicked={() => this.clickTodoHandler(td)}\n        />);\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = <TodoDetail\n        title={this.state.selectedTodo.title}\n        content={this.state.selectedTodo.content}\n      />\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to='/new-todo' exact>New Todo</NavLink>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, null)(TodoList);"]},"metadata":{},"sourceType":"module"}