{"ast":null,"code":"var _jsxFileName = \"/home/parkhonggeun/lab/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/action/actionType';\nimport { withRouter } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport * as actionCreators from '../../store/action/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTodo: null\n    };\n\n    this.clickTodoHandler = td => {\n      this.props.history.push('/todos/' + td.id);\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/api/todoerror').then(result => console.log(result)).catch(error => console.log(error));\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clickDetail: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDelete: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch({\n      type: actionTypes.TOGGLE_DONE,\n      targetID: id\n    }),\n    onDeleteTodo: id => dispatch({\n      type: actionTypes.DELETE_TODO,\n      targetID: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));","map":{"version":3,"sources":["/home/parkhonggeun/lab/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","Todo","TodoDetail","connect","actionTypes","withRouter","NavLink","axios","actionCreators","TodoList","state","selectedTodo","clickTodoHandler","td","props","history","push","id","componentDidMount","get","then","result","console","log","catch","error","render","todos","storedTodos","map","title","done","onToggleTodo","onDeleteTodo","todo","content","mapStateToProps","mapDispatchToProps","dispatch","type","TOGGLE_DONE","targetID","DELETE_TODO"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../store/action/actionType';\nimport { withRouter } from 'react-router';\n\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport * as actionCreators from '../../store/action/index';\n\nclass TodoList extends Component {\n  state = {\n    selectedTodo: null,\n  }\n\n  componentDidMount() {\n    axios.get('/api/todoerror')\n      .then(result => console.log(result))\n      .catch(error => console.log(error));\n  }\n\n  clickTodoHandler = (td) => {\n    this.props.history.push('/todos/' + td.id);\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clickDetail={() => this.clickTodoHandler(td)}\n          clickDone = {() => this.props.onToggleTodo(td.id)}\n          clickDelete = {() => this.props.onDeleteTodo(td.id)}\n        />);\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = <TodoDetail\n        title={this.state.selectedTodo.title}\n        content={this.state.selectedTodo.content}\n      />\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to='/new-todo' exact>New Todo</NavLink>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: (id) =>\n      dispatch({type: actionTypes.TOGGLE_DONE, targetID: id}),\n    onDeleteTodo: (id) => \n      dispatch({type: actionTypes.DELETE_TODO, targetID: id})\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));"]},"metadata":{},"sourceType":"module"}