{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\queis\\\\SWPP_Projects\\\\week-4-practice\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport todoReducer from './store/reducers/todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootReducer = combineReducers({\n  /* in this case, we have only single reducer,\r\n  * but we can merge reducers by using combineReducers for bigger project */\n  td: todoReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk)); //const store = createStore((state = {}, action) => state); // TODO\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 41\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 17\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/queis/SWPP_Projects/week-4-practice/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","combineReducers","applyMiddleware","thunk","todoReducer","rootReducer","td","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAGA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAChC;AACJ;AACIK,EAAAA,EAAE,EAAEF;AAH4B,CAAD,CAAnC;AAKA,MAAMG,KAAK,GAAGP,WAAW,CAACK,WAAD,EAAcH,eAAe,CAACC,KAAD,CAA7B,CAAzB,C,CAEA;;AACAP,QAAQ,CAACY,MAAT,eAAgB,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBAAwB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,QAAhB,EACIE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADJ,E,CAGA;AACA;AACA;;AACAZ,aAAa,CAACa,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers } from 'redux';\r\nimport { applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport todoReducer from './store/reducers/todo';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    /* in this case, we have only single reducer,\r\n    * but we can merge reducers by using combineReducers for bigger project */\r\n    td: todoReducer,\r\n});\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n//const store = createStore((state = {}, action) => state); // TODO\r\nReactDOM.render(<Provider store={store}><App /></Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}