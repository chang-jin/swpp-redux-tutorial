{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\queis\\\\SWPP_Projects\\\\week-4-practice\\\\src\\\\containers\\\\TodoList\\\\NewTodo\\\\NewTodo.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport { Redirect } from 'react-router-dom';\nimport './NewTodo.css';\nimport * as actionCreators from \"../../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      submitted: false\n    };\n\n    this.postTodoHandler = () => {\n      this.props.onStoreTodo(this.state.title, this.state.content);\n      this.setState({\n        submitted: true\n      });\n    };\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.state.submitted) {\n      redirect = /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewTodo\",\n      children: [redirect, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.title,\n        onChange: event => this.setState({\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        type: \"text\",\n        value: this.state.content,\n        onChange: event => this.setState({\n          content: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.postTodoHandler(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStoreTodo: (title, content) => dispatch(actionCreators.postTodo({\n      title: title,\n      content: content\n    }))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewTodo);","map":{"version":3,"sources":["C:/Users/queis/SWPP_Projects/week-4-practice/src/containers/TodoList/NewTodo/NewTodo.js"],"names":["React","Component","connect","actionTypes","Redirect","actionCreators","NewTodo","state","title","content","submitted","postTodoHandler","props","onStoreTodo","setState","render","redirect","event","target","value","mapDispatchToProps","dispatch","postTodo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oCAA7B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,eAAP;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,SAAS,EAAE;AAHP,KADoB;;AAAA,SAO5BC,eAP4B,GAOV,MAAM;AACpB,WAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKN,KAAL,CAAWC,KAAlC,EAAyC,KAAKD,KAAL,CAAWE,OAApD;AACA,WAAKK,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAV2B;AAAA;;AAY5BK,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKT,KAAL,CAAWG,SAAf,EAA0B;AAC1BM,MAAAA,QAAQ,gBAAG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAX;AACC;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACKA,QADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAArC;AACI,QAAA,QAAQ,EAAGS,KAAD,IAAW,KAAKH,QAAL,CAAc;AAAEN,UAAAA,KAAK,EAAES,KAAK,CAACC,MAAN,CAAaC;AAAtB,SAAd;AADzB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,OAAjD;AACI,QAAA,QAAQ,EAAGQ,KAAD,IAAW,KAAKH,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AAAxB,SAAd;AADzB;AAAA;AAAA;AAAA;AAAA,cAPJ,eASI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKR,eAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AA9B2B;;AAiChC,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHR,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAQC,OAAR,KACTY,QAAQ,CAAChB,cAAc,CAACiB,QAAf,CAAwB;AAACd,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,OAAO,EACnDA;AAD6B,KAAxB,CAAD;AAFT,GAAP;AAKH,CAND;;AAQA,eAAeP,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCd,OAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../store/actions/actionTypes';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './NewTodo.css';\r\nimport * as actionCreators from \"../../../store/actions\";\r\n\r\nclass NewTodo extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        submitted: false,\r\n    }\r\n\r\n    postTodoHandler = () => {\r\n        this.props.onStoreTodo(this.state.title, this.state.content);\r\n        this.setState({ submitted: true });\r\n    }\r\n\r\n    render() {\r\n        let redirect = null;\r\n        if (this.state.submitted) {\r\n        redirect = <Redirect to='/todos' />\r\n        }\r\n        return (\r\n            <div className=\"NewTodo\">\r\n                {redirect}\r\n                <h1>Add a Todo</h1>\r\n                <label>Title</label>\r\n                <input type=\"text\" value={this.state.title}\r\n                    onChange={(event) => this.setState({ title: event.target.value })} />\r\n                <label>Content</label>\r\n                <textarea rows=\"4\" type=\"text\" value={this.state.content}\r\n                    onChange={(event) => this.setState({ content: event.target.value })} />\r\n                <button onClick={() => this.postTodoHandler()}>Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onStoreTodo: (title, content) =>\r\n            dispatch(actionCreators.postTodo({title: title, content:\r\n                content})),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NewTodo);"]},"metadata":{},"sourceType":"module"}