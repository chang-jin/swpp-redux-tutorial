{"ast":null,"code":"var _jsxFileName = \"/Users/yuna/Desktop/\\u1109\\u1169\\u1100\\u1162\\u110B\\u116F\\u11AB\\u1109\\u1175\\u11AF/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport * as actionCreators from '../../store/actions/index';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: 'SWPP',\n        content: 'take swpp class',\n        done: true\n      }, {\n        id: 2,\n        title: 'Movie',\n        content: 'watch movie',\n        done: false\n      }, {\n        id: 3,\n        title: 'Dinner',\n        content: 'eat dinner',\n        done: false\n      }],\n      selectedTodo: null\n    };\n\n    this.clickTodoHandler = td => {\n      this.props.historu.push('/todos/' + td.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clicked: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDelete: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: id => dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => dispatch(actionCreators.getTodos)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));","map":{"version":3,"sources":["/Users/yuna/Desktop/소개원실/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","Todo","TodoDetail","actionTypes","actionCreators","NavLink","connect","withRouter","axios","TodoList","state","todos","id","title","content","done","selectedTodo","clickTodoHandler","td","props","historu","push","componentDidMount","onGetAll","render","storedTodos","map","onToggleTodo","onDeleteTodo","todo","mapStateToProps","mapDispatchToProps","dispatch","toggleTodo","deleteTodo","getTodos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport * as actionCreators from '../../store/actions/index';\n\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter} from 'react-router';\nimport axios from 'axios';\n\n\n\nclass TodoList extends Component {\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n  state = {\n    todos: [\n      { id: 1, title: 'SWPP', content: 'take swpp class', done: true },\n      { id: 2, title: 'Movie', content: 'watch movie', done: false },\n      { id: 3, title: 'Dinner', content: 'eat dinner', done: false }\n    ],\n    selectedTodo: null,\n  }\n\n  clickTodoHandler = (td) => {\n    this.props.historu.push('/todos/' + td.id);\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clicked={() => this.clickTodoHandler(td)}\n          clickDone={()=> this.props.onToggleTodo(td.id)}\n          clickDelete = {()=> this.props.onDeleteTodo(td.id)}\n        />);\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = <TodoDetail\n        title={this.state.selectedTodo.title}\n        content={this.state.selectedTodo.content}\n      />\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to='/new-todo' exact>New Todo</NavLink>\n      </div>\n    )\n  }\n};\n\n\n\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: (id) =>\n      dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: (id) =>\n      dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => dispatch(actionCreators.getTodos),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));"]},"metadata":{},"sourceType":"module"}