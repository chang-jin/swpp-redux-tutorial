{"ast":null,"code":"var _jsxFileName = \"/Users/kimnamgi/Desktop/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js\";\nimport React, { Component } from 'react'; // import { Redirect } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../../store/actions/index';\nimport './NewTodo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '' // submitted: false,\n\n    };\n\n    this.postTodoHandler = () => {\n      this.props.onStoreTodo(this.state.title, this.state.content);\n    };\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.state.submitted) {\n      redirect = /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewTodo\",\n      children: [redirect, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.title,\n        onChange: event => this.setState({\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        type: \"text\",\n        value: this.state.content,\n        onChange: event => this.setState({\n          content: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.postTodoHandler(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStoreTodo: (title, content) => dispatch(actionCreators.postTodo({\n      title: title,\n      content: content\n    }))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewTodo);","map":{"version":3,"sources":["/Users/kimnamgi/Desktop/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js"],"names":["React","Component","connect","actionCreators","NewTodo","state","title","content","postTodoHandler","props","onStoreTodo","render","redirect","submitted","event","setState","target","value","mapDispatchToProps","dispatch","postTodo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,cAAZ,MAAgC,8BAAhC;AAEA,OAAO,eAAP;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,EAFH,CAGN;;AAHM,KADsB;;AAAA,SAO9BC,eAP8B,GAOZ,MAAM;AACtB,WAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKL,KAAL,CAAWC,KAAlC,EAAyC,KAAKD,KAAL,CAAWE,OAApD;AACD,KAT6B;AAAA;;AAW9BI,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKP,KAAL,CAAWQ,SAAf,EAA0B;AACxBD,MAAAA,QAAQ,gBAAG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACGA,QADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAArC;AACE,QAAA,QAAQ,EAAGQ,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AAAtB,SAAd;AADvB;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,OAAjD;AACE,QAAA,QAAQ,EAAGO,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAEO,KAAK,CAACE,MAAN,CAAaC;AAAxB,SAAd;AADvB;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKT,eAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA7B6B;;AAgChC,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,WAAW,EAAE,CAACJ,KAAD,EAAQC,OAAR,KACXY,QAAQ,CAAChB,cAAc,CAACiB,QAAf,CAAwB;AAACd,MAAAA,KAAK,EAAEA,KAAR;AAAeC,MAAAA,OAAO,EAAEA;AAAxB,KAAxB,CAAD;AAFL,GAAP;AAID,CALD;;AAOA,eAAeL,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCd,OAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\n\n// import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../../store/actions/index';\n\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n  state = {\n    title: '',\n    content: '',\n    // submitted: false,\n  }\n\n  postTodoHandler = () => {\n    this.props.onStoreTodo(this.state.title, this.state.content);\n  }\n\n  render() {\n    let redirect = null;\n    if (this.state.submitted) {\n      redirect = <Redirect to='/todos' />\n    }\n    return (\n      <div className=\"NewTodo\">\n        {redirect}\n        <h1>Add a Todo</h1>\n        <label>Title</label>\n        <input type=\"text\" value={this.state.title}\n          onChange={(event) => this.setState({ title: event.target.value })} />\n        <label>Content</label>\n        <textarea rows=\"4\" type=\"text\" value={this.state.content}\n          onChange={(event) => this.setState({ content: event.target.value })} />\n        <button onClick={() => this.postTodoHandler()}>Submit</button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStoreTodo: (title, content) =>\n      dispatch(actionCreators.postTodo({title: title, content: content})),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewTodo);"]},"metadata":{},"sourceType":"module"}