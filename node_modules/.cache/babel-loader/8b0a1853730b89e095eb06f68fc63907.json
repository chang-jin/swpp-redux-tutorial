{"ast":null,"code":"var _jsxFileName = \"/Users/ellenkim/Projects/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from \"react\";\nimport Todo from \"../../components/Todo/Todo\";\nimport TodoDetail from \"../../components/TodoDetail/TodoDetail\";\nimport \"./TodoList.css\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actionCreators from \"../../store/action/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickTodoHandler = td => {\n      this.props.history.push(\"/todos/\" + td.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clickDetail: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDelete: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: id => dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => dispatch(actionCreators.getTodos())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));","map":{"version":3,"sources":["/Users/ellenkim/Projects/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","Todo","TodoDetail","connect","withRouter","NavLink","actionCreators","TodoList","clickTodoHandler","td","props","history","push","id","componentDidMount","onGetAll","render","todos","storedTodos","map","title","done","onToggleTodo","onDeleteTodo","todo","state","selectedTodo","content","mapStateToProps","mapDispatchToProps","dispatch","toggleTodo","deleteTodo","getTodos"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Todo from \"../../components/Todo/Todo\";\nimport TodoDetail from \"../../components/TodoDetail/TodoDetail\";\nimport \"./TodoList.css\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nimport { NavLink } from \"react-router-dom\";\nimport * as actionCreators from \"../../store/action/index\";\n\nclass TodoList extends Component {\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  clickTodoHandler = (td) => {\n    this.props.history.push(\"/todos/\" + td.id);\n  };\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clickDetail={() => this.clickTodoHandler(td)}\n          clickDone={() => this.props.onToggleTodo(td.id)}\n          clickDelete={() => this.props.onDeleteTodo(td.id)}\n        />\n      );\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = (\n        <TodoDetail\n          title={this.state.selectedTodo.title}\n          content={this.state.selectedTodo.content}\n        />\n      );\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to=\"/new-todo\" exact>\n          New Todo\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    storedTodos: state.td.todos,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onToggleTodo: (id) => dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: (id) => dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => dispatch(actionCreators.getTodos()),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TodoList));\n"]},"metadata":{},"sourceType":"module"}