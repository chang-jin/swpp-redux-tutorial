{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  todos: [],\n  selectedTodo: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      const newTodo = {\n        id: action.id,\n        title: action.title,\n        content: action.content,\n        done: action.done\n      };\n      return { ...state,\n        todos: state.todos.concat(newTodo)\n      };\n\n    case actionTypes.DELETE_TODO:\n      const deletedTodos = state.todos.filter(todo => {\n        return todo.id !== action.targetID;\n      });\n      return { ...state,\n        todos: deletedTodos\n      };\n\n    case actionTypes.TOGGLE_DONE:\n      const modified = state.todos.map(todo => {\n        if (todo.id === action.targetID) {\n          return { ...todo,\n            done: !todo.done\n          };\n        } else {\n          return { ...todo\n          };\n        }\n      });\n      return { ...state,\n        todos: modified\n      };\n\n    case actionTypes.GET_TODO:\n      return { ...state,\n        selectedTodo: action.target\n      };\n\n    case actionTypes.GET_ALL:\n      return { ...state,\n        todos: action.todos\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/young/SWPP/practice/swpp-redux-tutorial/src/store/reducers/todo.js"],"names":["actionTypes","initialState","todos","selectedTodo","reducer","state","action","type","ADD_TODO","newTodo","id","title","content","done","concat","DELETE_TODO","deletedTodos","filter","todo","targetID","TOGGLE_DONE","modified","map","GET_TODO","target","GET_ALL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,QAAjB;AACE,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEJ,MAAM,CAACI,EADG;AAEdC,QAAAA,KAAK,EAAEL,MAAM,CAACK,KAFA;AAGdC,QAAAA,OAAO,EAAEN,MAAM,CAACM,OAHF;AAIdC,QAAAA,IAAI,EAAEP,MAAM,CAACO;AAJC,OAAhB;AAMA,aAAO,EAAE,GAAGR,KAAL;AAAYH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYY,MAAZ,CAAmBL,OAAnB;AAAnB,OAAP;;AACF,SAAKT,WAAW,CAACe,WAAjB;AACE,YAAMC,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAoBC,IAAD,IAAU;AAChD,eAAOA,IAAI,CAACR,EAAL,KAAYJ,MAAM,CAACa,QAA1B;AACD,OAFoB,CAArB;AAGA,aAAO,EAAE,GAAGd,KAAL;AAAYH,QAAAA,KAAK,EAAEc;AAAnB,OAAP;;AACF,SAAKhB,WAAW,CAACoB,WAAjB;AACE,YAAMC,QAAQ,GAAGhB,KAAK,CAACH,KAAN,CAAYoB,GAAZ,CAAiBJ,IAAD,IAAU;AACzC,YAAIA,IAAI,CAACR,EAAL,KAAYJ,MAAM,CAACa,QAAvB,EAAiC;AAC/B,iBAAO,EAAE,GAAGD,IAAL;AAAWL,YAAAA,IAAI,EAAE,CAACK,IAAI,CAACL;AAAvB,WAAP;AACD,SAFD,MAEO;AACL,iBAAO,EAAE,GAAGK;AAAL,WAAP;AACD;AACF,OANgB,CAAjB;AAOA,aAAO,EAAE,GAAGb,KAAL;AAAYH,QAAAA,KAAK,EAAEmB;AAAnB,OAAP;;AACF,SAAKrB,WAAW,CAACuB,QAAjB;AACE,aAAO,EAAE,GAAGlB,KAAL;AAAYF,QAAAA,YAAY,EAAEG,MAAM,CAACkB;AAAjC,OAAP;;AACF,SAAKxB,WAAW,CAACyB,OAAjB;AACE,aAAO,EAAE,GAAGpB,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAA1B,OAAP;;AACF;AACE;AA5BJ;;AA8BA,SAAOG,KAAP;AACD,CAhCD;;AAkCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  todos: [\n  ],\n  selectedTodo: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      const newTodo = {\n        id: action.id,\n        title: action.title,\n        content: action.content,\n        done: action.done,\n      };\n      return { ...state, todos: state.todos.concat(newTodo) };\n    case actionTypes.DELETE_TODO:\n      const deletedTodos = state.todos.filter((todo) => {\n        return todo.id !== action.targetID;\n      });\n      return { ...state, todos: deletedTodos };\n    case actionTypes.TOGGLE_DONE:\n      const modified = state.todos.map((todo) => {\n        if (todo.id === action.targetID) {\n          return { ...todo, done: !todo.done };\n        } else {\n          return { ...todo };\n        }\n      });\n      return { ...state, todos: modified };\n    case actionTypes.GET_TODO:\n      return { ...state, selectedTodo: action.target };\n    case actionTypes.GET_ALL:\n      return { ...state, todos: action.todos };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}