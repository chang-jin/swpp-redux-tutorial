{"ast":null,"code":"var _jsxFileName = \"/home/cw10108/swpp/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './NewTodo.css';\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch({\n      type: actionTypes.TOGGLE_DONE,\n      targetID: id\n    }),\n    onDeleteTodo: id => dispatch({\n      tyoe: actionTypes.DELETE_TODO,\n      targetID: id\n    }),\n    onStoreTodo: (title, content) => dispatch({\n      type: actionTypes.ADD_TODO,\n      title: title,\n      content: content\n    })\n  };\n};\n\nclass NewTodo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      content: '',\n      submitted: false\n    };\n\n    this.postTodoHandler = () => {\n      this.props.onStoreTodo(this.state.title, this.state.content);\n      this.setState({\n        submitted: true\n      });\n    };\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.state.submitted) {\n      redirect = /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NewTodo\",\n      children: [redirect, /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.title,\n        onChange: event => this.setState({\n          title: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        type: \"text\",\n        value: this.state.content,\n        onChange: event => this.setState({\n          content: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.postTodoHandler(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(NewTodo);","map":{"version":3,"sources":["/home/cw10108/swpp/swpp-redux-tutorial/src/containers/TodoList/NewTodo/NewTodo.js"],"names":["React","Component","Redirect","connect","actionTypes","mapDispatchToProps","dispatch","onToggleTodo","id","type","TOGGLE_DONE","targetID","onDeleteTodo","tyoe","DELETE_TODO","onStoreTodo","title","content","ADD_TODO","NewTodo","state","submitted","postTodoHandler","props","setState","render","redirect","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,eAAP;AAEA,OAAO,KAAKC,WAAZ,MAA6B,oCAA7B;;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAG;AACpC,SAAO;AACLC,IAAAA,YAAY,EAAEC,EAAD,IACXF,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACL,WAAW,CAACM,WAAlB;AAA+BC,MAAAA,QAAQ,EAACH;AAAxC,KAAD,CAFL;AAGLI,IAAAA,YAAY,EAAEJ,EAAD,IACXF,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAACT,WAAW,CAACU,WAAlB;AAA+BH,MAAAA,QAAQ,EAACH;AAAxC,KAAD,CAJL;AAKLO,IAAAA,WAAW,EAAC,CAACC,KAAD,EAAQC,OAAR,KACVX,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEL,WAAW,CAACc,QAAnB;AAA6BF,MAAAA,KAAK,EAAEA,KAApC;AAA2CC,MAAAA,OAAO,EAACA;AAAnD,KAAD;AANL,GAAP;AAQD,CATD;;AAWA,MAAME,OAAN,SAAsBlB,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BmB,KAD8B,GACtB;AACNJ,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNI,MAAAA,SAAS,EAAE;AAHL,KADsB;;AAAA,SAO9BC,eAP8B,GAOZ,MAAM;AACtB,WAAKC,KAAL,CAAWR,WAAX,CAAuB,KAAKK,KAAL,CAAWJ,KAAlC,EAAyC,KAAKI,KAAL,CAAWH,OAApD;AACA,WAAKO,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAV6B;AAAA;;AAY9BI,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAI,KAAKN,KAAL,CAAWC,SAAf,EAA0B;AACxBK,MAAAA,QAAQ,gBAAG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAX;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACGA,QADH,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWJ,KAArC;AACE,QAAA,QAAQ,EAAGW,KAAD,IAAW,KAAKH,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaC;AAAtB,SAAd;AADvB;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWH,OAAjD;AACE,QAAA,QAAQ,EAAGU,KAAD,IAAW,KAAKH,QAAL,CAAc;AAAEP,UAAAA,OAAO,EAAEU,KAAK,CAACC,MAAN,CAAaC;AAAxB,SAAd;AADvB;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKP,eAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA9B6B;;AAgChC,eAAenB,OAAO,CAAC,IAAD,EAAOE,kBAAP,CAAP,CAAkCc,OAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { Redirect } from 'react-router-dom';\n\nimport {connect} from 'react-redux'\n\nimport './NewTodo.css';\n\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nconst mapDispatchToProps = dispatch =>{\n  return {\n    onToggleTodo:(id) => \n      dispatch({type:actionTypes.TOGGLE_DONE, targetID:id}),\n    onDeleteTodo:(id) =>\n      dispatch({tyoe:actionTypes.DELETE_TODO, targetID:id}),\n    onStoreTodo:(title, content) =>\n      dispatch({type: actionTypes.ADD_TODO, title: title, content:content})\n  };\n};\n\nclass NewTodo extends Component {\n  state = {\n    title: '',\n    content: '',\n    submitted: false,\n  }\n\n  postTodoHandler = () => {\n    this.props.onStoreTodo(this.state.title, this.state.content);\n    this.setState({ submitted: true });\n  }\n\n  render() {\n    let redirect = null;\n    if (this.state.submitted) {\n      redirect = <Redirect to='/todos' />\n    }\n    return (\n      <div className=\"NewTodo\">\n        {redirect}\n        <h1>Add a Todo</h1>\n        <label>Title</label>\n        <input type=\"text\" value={this.state.title}\n          onChange={(event) => this.setState({ title: event.target.value })} />\n        <label>Content</label>\n        <textarea rows=\"4\" type=\"text\" value={this.state.content}\n          onChange={(event) => this.setState({ content: event.target.value })} />\n        <button onClick={() => this.postTodoHandler()}>Submit</button>\n      </div>\n    );\n  }\n}\nexport default connect(null, mapDispatchToProps)(NewTodo);\n"]},"metadata":{},"sourceType":"module"}