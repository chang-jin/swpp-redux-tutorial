{"ast":null,"code":"var _jsxFileName = \"/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTodo: null\n    };\n\n    this.clickTodoHandler = td => {\n      if (this.state.selectedTodo === td) {\n        this.setState({ ...this.state,\n          selectedTodo: null\n        });\n      } else {\n        this.setState({ ...this.state,\n          selectedTodo: td\n        });\n      }\n    };\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clickedDetail: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDelete: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch({\n      type: actionTypes.TOGGLE_DONE,\n      targetID: id\n    }),\n    onDeleteTodo: id => dispatch({\n      type: actionTypes.DELETE_TODO,\n      targetID: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/home/jaeyeonkim99/swpp2021/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","Todo","TodoDetail","NavLink","connect","actionTypes","TodoList","state","selectedTodo","clickTodoHandler","td","setState","render","todos","props","storedTodos","map","title","done","onToggleTodo","id","onDeleteTodo","todo","content","mapStateToProps","mapDispatchToProps","dispatch","type","TOGGLE_DONE","targetID","DELETE_TODO"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\n\nimport { NavLink } from 'react-router-dom';\n\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../store/actions/actionTypes';\n\nclass TodoList extends Component {\n  state = {\n    selectedTodo: null,\n  }\n\n  clickTodoHandler = (td) => {\n    if (this.state.selectedTodo === td) {\n      this.setState({ ...this.state, selectedTodo: null });\n    } else {\n      this.setState({ ...this.state, selectedTodo: td });\n    }\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clickedDetail={() => this.clickTodoHandler(td)}\n          clickDone={() => this.props.onToggleTodo(td.id)}\n          clickDelete={() => this.props.onDeleteTodo(td.id)}\n        />);\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = <TodoDetail\n        title={this.state.selectedTodo.title}\n        content={this.state.selectedTodo.content}\n      />\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to='/new-todo' exact>New Todo</NavLink>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state =>{\n  return{\n    storedTodos: state.td.todos\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: (id) =>\n      dispatch({ type: actionTypes.TOGGLE_DONE, targetID: id }),\n    onDeleteTodo: (id) =>\n      dispatch({ type: actionTypes.DELETE_TODO, targetID: id }),\n  };\n }; \n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}