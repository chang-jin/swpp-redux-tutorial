{"ast":null,"code":"var _jsxFileName = \"/Users/kangwhihyun/Documents/Dev/SWPP/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actionCreators from \"../../store/actions/index\";\nimport { withRouter } from \"react-router\";\nimport axios from \"axios\";\nimport Todo from \"../../components/Todo/Todo\";\nimport TodoDetail from \"../../components/TodoDetail/TodoDetail\";\nimport \"./TodoList.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteTodo: id => dispatch({\n      type: actionTypes.DELETE_TODO,\n      targetID: id\n    })\n  };\n};\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTodo: null\n    };\n\n    this.clickTodoHandler = td => {\n      this.props.history.push(\"/todos/\" + td.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clicked: () => this.clickTodoHandler(td),\n        clickDetail: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDELETE: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));","map":{"version":3,"sources":["/Users/kangwhihyun/Documents/Dev/SWPP/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","connect","actionTypes","actionCreators","withRouter","axios","Todo","TodoDetail","NavLink","mapStateToProps","state","storedTodos","td","todos","mapDispatchToProps","dispatch","onDeleteTodo","id","type","DELETE_TODO","targetID","TodoList","selectedTodo","clickTodoHandler","props","history","push","componentDidMount","onGetAll","render","map","title","done","onToggleTodo","todo","content"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actionCreators from \"../../store/actions/index\";\nimport { withRouter } from \"react-router\";\nimport axios from \"axios\";\n\nimport Todo from \"../../components/Todo/Todo\";\nimport TodoDetail from \"../../components/TodoDetail/TodoDetail\";\nimport \"./TodoList.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => {\n  return {\n    storedTodos: state.td.todos,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n \n    onDeleteTodo: (id) =>\n      dispatch({ type: actionTypes.DELETE_TODO, targetID: id }),\n\n  };\n};\nclass TodoList extends Component {\n  state = { selectedTodo: null };\n  clickTodoHandler = (td) => {\n    this.props.history.push(\"/todos/\" + td.id);\n  };\n\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clicked={() => this.clickTodoHandler(td)}\n          clickDetail={() => this.clickTodoHandler(td)}\n          clickDone={() => this.props.onToggleTodo(td.id)}\n          clickDELETE={() => this.props.onDeleteTodo(td.id)}\n        />\n      );\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = (\n        <TodoDetail\n          title={this.state.selectedTodo.title}\n          content={this.state.selectedTodo.content}\n        />\n      );\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to=\"/new-todo\" exact>\n          New Todo\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TodoList));\n"]},"metadata":{},"sourceType":"module"}