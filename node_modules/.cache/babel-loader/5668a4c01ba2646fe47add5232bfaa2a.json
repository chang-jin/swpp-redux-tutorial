{"ast":null,"code":"import * as actionTypes from \"../action/actionType\";\nconst initialState = {\n  todos: [{\n    id: 1,\n    title: \"SWPP\",\n    content: 'take swpp class',\n    done: true\n  }, {\n    id: 2,\n    title: \"Movie\",\n    content: 'watch movie',\n    done: false\n  }, {\n    id: 3,\n    title: \"Dinner\",\n    content: 'eat dinner',\n    done: false\n  }],\n  selectedTodo: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      const newTodo = {\n        id: state.todos.length + 1,\n        title: action.title,\n        content: action.content,\n        done: false\n      };\n      return { ...state,\n        todos: [...state.todos, newTodo]\n      };\n\n    case actionTypes.DELETE_TODO:\n      const deleted = state.todos.filter(todo => {\n        return todo.id !== action.targetID;\n      });\n      return { ...state,\n        todos: deleted\n      };\n\n    case actionTypes.TOGGLE_DONE:\n      const modified = state.todos.map(todo => {\n        if (todo.id === action.targetID) {\n          return { ...todo,\n            done: !todo.done\n          };\n        } else {\n          return { ...todo\n          };\n        }\n      });\n      return { ...state,\n        todos: modified\n      };\n\n    case actionTypes.GET_TODO:\n      const target = state.todos.find(td => td.id === action.targetID);\n      return { ...state,\n        selectedTodo: target\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/parkhonggeun/lab/swpp-redux-tutorial/src/store/reducer/todo.js"],"names":["actionTypes","initialState","todos","id","title","content","done","selectedTodo","reducer","state","action","type","ADD_TODO","newTodo","length","DELETE_TODO","deleted","filter","todo","targetID","TOGGLE_DONE","modified","map","GET_TODO","target","find","td"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,MAAhB;AAAwBC,IAAAA,OAAO,EAAE,iBAAjC;AAAoDC,IAAAA,IAAI,EAAE;AAA1D,GADG,EAEH;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,OAAO,EAAE,aAAlC;AAAiDC,IAAAA,IAAI,EAAE;AAAvD,GAFG,EAGH;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,OAAO,EAAE,YAAnC;AAAiDC,IAAAA,IAAI,EAAE;AAAvD,GAHG,CADU;AAMjBC,EAAAA,YAAY,EAAE;AANG,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAW,CAACY,QAAjB;AACI,YAAMC,OAAO,GAAG;AACZV,QAAAA,EAAE,EAAEM,KAAK,CAACP,KAAN,CAAYY,MAAZ,GAAqB,CADb;AAEZV,QAAAA,KAAK,EAAEM,MAAM,CAACN,KAFF;AAGZC,QAAAA,OAAO,EAAEK,MAAM,CAACL,OAHJ;AAIZC,QAAAA,IAAI,EAAE;AAJM,OAAhB;AAMA,aAAO,EAAC,GAAGG,KAAJ;AAAWP,QAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBW,OAAjB;AAAlB,OAAP;;AAEJ,SAAKb,WAAW,CAACe,WAAjB;AACI,YAAMC,OAAO,GAAGP,KAAK,CAACP,KAAN,CAAYe,MAAZ,CAAoBC,IAAD,IAAS;AACxC,eAAOA,IAAI,CAACf,EAAL,KAAYO,MAAM,CAACS,QAA1B;AACH,OAFe,CAAhB;AAGA,aAAO,EAAC,GAAGV,KAAJ;AAAWP,QAAAA,KAAK,EAAEc;AAAlB,OAAP;;AACJ,SAAKhB,WAAW,CAACoB,WAAjB;AACI,YAAMC,QAAQ,GAAGZ,KAAK,CAACP,KAAN,CAAYoB,GAAZ,CAAiBJ,IAAI,IAAG;AACrC,YAAIA,IAAI,CAACf,EAAL,KAAYO,MAAM,CAACS,QAAvB,EAAiC;AAC7B,iBAAO,EAAC,GAAGD,IAAJ;AAAUZ,YAAAA,IAAI,EAAE,CAACY,IAAI,CAACZ;AAAtB,WAAP;AACH,SAFD,MAEO;AACH,iBAAO,EAAC,GAAGY;AAAJ,WAAP;AACH;AACJ,OANgB,CAAjB;AAOA,aAAO,EAAC,GAAGT,KAAJ;AAAWP,QAAAA,KAAK,EAAEmB;AAAlB,OAAP;;AACJ,SAAKrB,WAAW,CAACuB,QAAjB;AACI,YAAMC,MAAM,GAAGf,KAAK,CAACP,KAAN,CAAYuB,IAAZ,CAAiBC,EAAE,IAC9BA,EAAE,CAACvB,EAAH,KAAUO,MAAM,CAACS,QADN,CAAf;AAEA,aAAO,EAAC,GAAGV,KAAJ;AAAWF,QAAAA,YAAY,EAAEiB;AAAzB,OAAP;;AACJ;AACI,aAAOf,KAAP;AA7BR;AA+BH,CAhCD;;AAkCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../action/actionType\";\n\nconst initialState = {\n    todos: [\n        { id: 1, title: \"SWPP\", content: 'take swpp class', done: true },\n        { id: 2, title: \"Movie\", content: 'watch movie', done: false },\n        { id: 3, title: \"Dinner\", content: 'eat dinner', done: false }\n    ],\n    selectedTodo: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.ADD_TODO:\n            const newTodo = {\n                id: state.todos.length + 1,\n                title: action.title,\n                content: action.content,\n                done: false\n            }\n            return {...state, todos: [...state.todos, newTodo]};\n\n        case actionTypes.DELETE_TODO:\n            const deleted = state.todos.filter((todo) =>{\n                return todo.id !== action.targetID;\n            });\n            return {...state, todos: deleted};\n        case actionTypes.TOGGLE_DONE:\n            const modified = state.todos.map((todo=> {\n                if (todo.id === action.targetID) {\n                    return {...todo, done: !todo.done};\n                } else {\n                    return {...todo};\n                }\n            }));\n            return {...state, todos: modified };\n        case actionTypes.GET_TODO:\n            const target = state.todos.find(td => \n                td.id === action.targetID);\n            return {...state, selectedTodo: target};\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}