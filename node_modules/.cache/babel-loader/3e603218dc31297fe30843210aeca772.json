{"ast":null,"code":"var _jsxFileName = \"/Users/yuna/Desktop/\\u1109\\u1169\\u1100\\u1162\\u110B\\u116F\\u11AB\\u1109\\u1175\\u11AF/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport * as actionCreators from '../../store/actions/index';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedTodo: null\n    };\n\n    this.clickTodoHandler = td => {\n      this.props.history.push('/todos/' + td.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clickDetail: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDelete: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    });\n    let todo = null;\n\n    if (this.state.selectedTodo) {\n      todo = /*#__PURE__*/_jsxDEV(TodoDetail, {\n        title: this.state.selectedTodo.title,\n        content: this.state.selectedTodo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), todo, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: id => dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => dispatch(actionCreators.getTodos)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));","map":{"version":3,"sources":["/Users/yuna/Desktop/소개원실/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","Todo","TodoDetail","actionTypes","actionCreators","NavLink","connect","withRouter","axios","TodoList","state","selectedTodo","clickTodoHandler","td","props","history","push","id","componentDidMount","onGetAll","render","todos","storedTodos","map","title","done","onToggleTodo","onDeleteTodo","todo","content","mapStateToProps","mapDispatchToProps","dispatch","toggleTodo","deleteTodo","getTodos"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Todo from '../../components/Todo/Todo';\nimport TodoDetail from '../../components/TodoDetail/TodoDetail';\nimport './TodoList.css';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport * as actionCreators from '../../store/actions/index';\n\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter} from 'react-router';\nimport axios from 'axios';\n\n\n\nclass TodoList extends Component {\n\n  state = {\n    selectedTodo: null,\n  }\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n  clickTodoHandler = (td) => {\n    this.props.history.push('/todos/' + td.id);\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map((td) => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clickDetail={() => this.clickTodoHandler(td)}\n          clickDone={()=> this.props.onToggleTodo(td.id)}\n          clickDelete = {()=> this.props.onDeleteTodo(td.id)}\n        />);\n    });\n\n    let todo = null;\n    if (this.state.selectedTodo) {\n      todo = <TodoDetail\n        title={this.state.selectedTodo.title}\n        content={this.state.selectedTodo.content}\n      />\n    }\n    return (\n      <div className=\"TodoList\">\n        <div className=\"title\">{this.props.title}</div>\n        <div className=\"todos\">{todos}</div>\n        {todo}\n        <NavLink to='/new-todo' exact>New Todo</NavLink>\n      </div>\n    )\n  }\n}\n\n\n\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: (id) =>\n      dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: (id) =>\n      dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => dispatch(actionCreators.getTodos),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));"]},"metadata":{},"sourceType":"module"}