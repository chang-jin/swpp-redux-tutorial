{"ast":null,"code":"import * as actionTypes from '../action/actionTypes';\nconst initialState = {\n  todos: [{\n    id: 1,\n    title: 'SWPP',\n    content: 'take swpp class',\n    done: true\n  }, {\n    id: 2,\n    title: 'Movie',\n    content: 'watch movie',\n    done: false\n  }, {\n    id: 3,\n    title: 'Dinner',\n    content: 'eat dinner',\n    done: false\n  }],\n  selectedTodo: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      const newTodo = {\n        id: state.todos.length + 1,\n        title: action.title,\n        content: action.content,\n        done: false\n      };\n      return { ...state,\n        todos: state.todos.concat(newTodo)\n      };\n\n    case actionTypes.DELETE_TODO:\n      const deletedTodos = state.todos.filter(todo => {\n        return todo.id !== action.targetID;\n      });\n      return { ...state,\n        todos: deletedTodos\n      };\n\n    case actionTypes.TOGGLE_DONE:\n      const modified = state.todos.map(todo => {\n        if (todo.id === action.targetID) {\n          return { ...todo,\n            done: !todo.done\n          };\n        } else {\n          return { ...todo\n          };\n        }\n      });\n      return { ...state,\n        todos: modified\n      };\n\n    case actionTypes.GET_TODO:\n      const target = { ...state.todos[action.targetID - 1]\n      };\n      return { ...state,\n        selectedTodo: target\n      };\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ellenkim/Projects/swpp-redux-tutorial/src/store/reducers/todo.js"],"names":["actionTypes","initialState","todos","id","title","content","done","selectedTodo","reducer","state","action","type","ADD_TODO","newTodo","length","concat","DELETE_TODO","deletedTodos","filter","todo","targetID","TOGGLE_DONE","modified","map","GET_TODO","target"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,MAAhB;AAAwBC,IAAAA,OAAO,EAAE,iBAAjC;AAAoDC,IAAAA,IAAI,EAAE;AAA1D,GADK,EAEL;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,OAAhB;AAAyBC,IAAAA,OAAO,EAAE,aAAlC;AAAiDC,IAAAA,IAAI,EAAE;AAAvD,GAFK,EAGL;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,QAAhB;AAA0BC,IAAAA,OAAO,EAAE,YAAnC;AAAiDC,IAAAA,IAAI,EAAE;AAAvD,GAHK,CADY;AAMnBC,EAAAA,YAAY,EAAE;AANK,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAW,CAACY,QAAjB;AACE,YAAMC,OAAO,GAAG;AACdV,QAAAA,EAAE,EAAEM,KAAK,CAACP,KAAN,CAAYY,MAAZ,GAAqB,CADX;AAEdV,QAAAA,KAAK,EAAEM,MAAM,CAACN,KAFA;AAGdC,QAAAA,OAAO,EAAEK,MAAM,CAACL,OAHF;AAIdC,QAAAA,IAAI,EAAE;AAJQ,OAAhB;AAMA,aAAO,EAAE,GAAGG,KAAL;AAAYP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYa,MAAZ,CAAmBF,OAAnB;AAAnB,OAAP;;AACF,SAAKb,WAAW,CAACgB,WAAjB;AACE,YAAMC,YAAY,GAAGR,KAAK,CAACP,KAAN,CAAYgB,MAAZ,CAAoBC,IAAD,IAAU;AAChD,eAAOA,IAAI,CAAChB,EAAL,KAAYO,MAAM,CAACU,QAA1B;AACD,OAFoB,CAArB;AAGA,aAAO,EAAE,GAAGX,KAAL;AAAYP,QAAAA,KAAK,EAAEe;AAAnB,OAAP;;AACF,SAAKjB,WAAW,CAACqB,WAAjB;AACE,YAAMC,QAAQ,GAAGb,KAAK,CAACP,KAAN,CAAYqB,GAAZ,CAAiBJ,IAAD,IAAU;AACzC,YAAIA,IAAI,CAAChB,EAAL,KAAYO,MAAM,CAACU,QAAvB,EAAiC;AAC/B,iBAAO,EAAE,GAAGD,IAAL;AAAWb,YAAAA,IAAI,EAAE,CAACa,IAAI,CAACb;AAAvB,WAAP;AACD,SAFD,MAEO;AACL,iBAAO,EAAE,GAAGa;AAAL,WAAP;AACD;AACF,OANgB,CAAjB;AAOA,aAAO,EAAE,GAAGV,KAAL;AAAYP,QAAAA,KAAK,EAAEoB;AAAnB,OAAP;;AACF,SAAKtB,WAAW,CAACwB,QAAjB;AACE,YAAMC,MAAM,GAAG,EAAE,GAAGhB,KAAK,CAACP,KAAN,CAAYQ,MAAM,CAACU,QAAP,GAAkB,CAA9B;AAAL,OAAf;AACA,aAAO,EAAE,GAAGX,KAAL;AAAYF,QAAAA,YAAY,EAAEkB;AAA1B,OAAP;;AACF;AACE;AA3BJ;;AA6BA,SAAOhB,KAAP;AACD,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../action/actionTypes';\n\nconst initialState = {\n  todos: [\n    { id: 1, title: 'SWPP', content: 'take swpp class', done: true },\n    { id: 2, title: 'Movie', content: 'watch movie', done: false },\n    { id: 3, title: 'Dinner', content: 'eat dinner', done: false }\n  ],\n  selectedTodo: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TODO:\n      const newTodo = {\n        id: state.todos.length + 1,\n        title: action.title,\n        content: action.content,\n        done: false\n      };\n      return { ...state, todos: state.todos.concat(newTodo) };\n    case actionTypes.DELETE_TODO:\n      const deletedTodos = state.todos.filter((todo) => {\n        return todo.id !== action.targetID;\n      });\n      return { ...state, todos: deletedTodos };\n    case actionTypes.TOGGLE_DONE:\n      const modified = state.todos.map((todo) => {\n        if (todo.id === action.targetID) {\n          return { ...todo, done: !todo.done };\n        } else {\n          return { ...todo };\n        }\n      });\n      return { ...state, todos: modified };\n    case actionTypes.GET_TODO:\n      const target = { ...state.todos[action.targetID - 1] };\n      return { ...state, selectedTodo: target };\n    default:\n      break;\n  }\n  return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}