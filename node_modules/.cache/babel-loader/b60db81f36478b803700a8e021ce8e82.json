{"ast":null,"code":"var _jsxFileName = \"/Users/ellenkim/Projects/swpp-redux-tutorial/src/containers/TodoList/TodoList.js\";\nimport React, { Component } from 'react';\nimport Todo from '../../components/Todo/Todo';\nimport { NavLink } from 'react-router-dom';\nimport './TodoList.css';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport * as actionCreators from '../../store/action/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickTodoHandler = td => {\n      this.props.history.push('/todos/' + td.id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return /*#__PURE__*/_jsxDEV(Todo, {\n        title: td.title,\n        done: td.done,\n        clickDetail: () => this.clickTodoHandler(td),\n        clickDone: () => this.props.onToggleTodo(td.id),\n        clickDelete: () => this.props.onDeleteTodo(td.id)\n      }, td.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), todos, /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-todo\",\n        exact: true,\n        children: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: id => dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: id => dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () => dispatch(actionCreators.getTodos())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));","map":{"version":3,"sources":["/Users/ellenkim/Projects/swpp-redux-tutorial/src/containers/TodoList/TodoList.js"],"names":["React","Component","Todo","NavLink","connect","withRouter","actionCreators","TodoList","clickTodoHandler","td","props","history","push","id","componentDidMount","onGetAll","render","todos","storedTodos","map","title","done","onToggleTodo","onDeleteTodo","mapStateToProps","state","mapDispatchToProps","dispatch","toggleTodo","deleteTodo","getTodos"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAO,gBAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,KAAKC,cAAZ,MAAgC,0BAAhC;;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAM/BO,gBAN+B,GAMXC,EAAD,IAAQ;AACzB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAYH,EAAE,CAACI,EAAvC;AACD,KAR8B;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWK,QAAX;AACD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKP,KAAL,CAAWQ,WAAX,CAAuBC,GAAvB,CAA2BV,EAAE,IAAI;AAC7C,0BACE,QAAC,IAAD;AAEE,QAAA,KAAK,EAAEA,EAAE,CAACW,KAFZ;AAGE,QAAA,IAAI,EAAEX,EAAE,CAACY,IAHX;AAIE,QAAA,WAAW,EAAE,MAAM,KAAKb,gBAAL,CAAsBC,EAAtB,CAJrB;AAKE,QAAA,SAAS,EAAE,MAAM,KAAKC,KAAL,CAAWY,YAAX,CAAwBb,EAAE,CAACI,EAA3B,CALnB;AAME,QAAA,WAAW,EAAE,MAAM,KAAKH,KAAL,CAAWa,YAAX,CAAwBd,EAAE,CAACI,EAA3B;AANrB,SACOJ,EAAE,CAACI,EADV;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXa,CAAd;AAaA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBACG,KAAKH,KAAL,CAAWU;AADd;AAAA;AAAA;AAAA;AAAA,cADF,EAIGH,KAJH,eAKE,QAAC,OAAD;AAAS,QAAA,EAAE,EAAC,WAAZ;AAAwB,QAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAjC8B;;AAoCjC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,WAAW,EAAEO,KAAK,CAAChB,EAAN,CAASQ;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLL,IAAAA,YAAY,EAAGT,EAAD,IACZc,QAAQ,CAACrB,cAAc,CAACsB,UAAf,CAA0Bf,EAA1B,CAAD,CAFL;AAGLU,IAAAA,YAAY,EAAGV,EAAD,IACZc,QAAQ,CAACrB,cAAc,CAACuB,UAAf,CAA0BhB,EAA1B,CAAD,CAJL;AAKLE,IAAAA,QAAQ,EAAE,MACRY,QAAQ,CAACrB,cAAc,CAACwB,QAAf,EAAD;AANL,GAAP;AAQD,CATD;;AAWA,eAAe1B,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,UAAU,CAACE,QAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Todo from '../../components/Todo/Todo';\n\nimport { NavLink } from 'react-router-dom';\n\nimport './TodoList.css';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport * as actionCreators from '../../store/action/index';\n\nclass TodoList extends Component {\n  state\n  componentDidMount() {\n    this.props.onGetAll();\n  }\n\n  clickTodoHandler = (td) => {\n    this.props.history.push('/todos/' + td.id);\n  }\n\n  render() {\n    const todos = this.props.storedTodos.map(td => {\n      return (\n        <Todo\n          key={td.id}\n          title={td.title}\n          done={td.done}\n          clickDetail={() => this.clickTodoHandler(td)}\n          clickDone={() => this.props.onToggleTodo(td.id)}\n          clickDelete={() => this.props.onDeleteTodo(td.id)}\n        />\n      );\n    });\n\n    return (\n      <div className=\"TodoList\">\n        <div className='title'>\n          {this.props.title}\n        </div>\n        {todos}\n        <NavLink to='/new-todo' exact>New Todo</NavLink>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    storedTodos: state.td.todos,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onToggleTodo: (id) =>\n      dispatch(actionCreators.toggleTodo(id)),\n    onDeleteTodo: (id) =>\n      dispatch(actionCreators.deleteTodo(id)),\n    onGetAll: () =>\n      dispatch(actionCreators.getTodos())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TodoList));\n"]},"metadata":{},"sourceType":"module"}