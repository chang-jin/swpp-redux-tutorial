{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"../action/actionType\";\nexport const getTodos_ = todos => {\n  return {\n    type: actionTypes.GET_ALL,\n    todos: todos\n  };\n};\nexport const getTodos = () => {\n  return dispatch => {\n    return axios.get(`/api/todo/`).then(res => dispatch(getTodos_(res.data)));\n  };\n};\nexport const postTodo_ = td => {\n  return {\n    type: actionTypes.ADD_TODO,\n    id: td.id,\n    title: td.title,\n    content: td.content\n  };\n};\nexport const postTodo = td => {\n  return dispatch => {\n    return axios.post(`/api/todo/`, td).then(res => {\n      dispatch(postTodo_(res.data));\n      dispatch(push('/todos/'));\n    });\n  };\n};\nexport const deleteTodo_ = id => {\n  return {\n    type: actionTypes.DELETE_TODO,\n    targetID: id\n  };\n};\nexport const deleteTodo = id => {\n  return dispatch => {\n    return axios.delete(`/api/todo/${id}/`).then(res => {\n      dispatch(deleteTodo_(id));\n    });\n  };\n};\nexport const toggleTodo_ = id => {\n  return {\n    type: actionTypes.TOGGLE_DONE,\n    targetID: id\n  };\n};\nexport const toggleTodo = id => {\n  return dispatch => {\n    return axios.put(`/api/todo/${id}/`).then(res => {\n      dispatch(toggleTodo_(id));\n    });\n  };\n};\nexport const getTodo_ = todo => {\n  return {\n    type: actionTypes.GET_TODO,\n    target: todo\n  };\n};\nexport const getTodo = id => {\n  return dispatch => {\n    return axios.get(`/api/todo/${id}/`).then(res => {\n      dispatch(getTodo_(res.data));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ellenkim/Projects/swpp-redux-tutorial/src/store/action/todo.js"],"names":["axios","actionTypes","getTodos_","todos","type","GET_ALL","getTodos","dispatch","get","then","res","data","postTodo_","td","ADD_TODO","id","title","content","postTodo","post","push","deleteTodo_","DELETE_TODO","targetID","deleteTodo","delete","toggleTodo_","TOGGLE_DONE","toggleTodo","put","getTodo_","todo","GET_TODO","target","getTodo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,sBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,SAAO;AAAEC,IAAAA,IAAI,EAAEH,WAAW,CAACI,OAApB;AAA6BF,IAAAA,KAAK,EAAEA;AAApC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAc;AACnB,WAAOP,KAAK,CAACQ,GAAN,CAAW,YAAX,EAAwBC,IAAxB,CAA8BC,GAAD,IAASH,QAAQ,CAACL,SAAS,CAACQ,GAAG,CAACC,IAAL,CAAV,CAA9C,CAAP;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAAQ;AAC/B,SAAO;AACLT,IAAAA,IAAI,EAAEH,WAAW,CAACa,QADb;AAELC,IAAAA,EAAE,EAAEF,EAAE,CAACE,EAFF;AAGLC,IAAAA,KAAK,EAAEH,EAAE,CAACG,KAHL;AAILC,IAAAA,OAAO,EAAEJ,EAAE,CAACI;AAJP,GAAP;AAMD,CAPM;AASP,OAAO,MAAMC,QAAQ,GAAIL,EAAD,IAAQ;AAC9B,SAAQN,QAAD,IAAc;AACnB,WAAOP,KAAK,CAACmB,IAAN,CAAY,YAAZ,EAAyBN,EAAzB,EAA6BJ,IAA7B,CAAmCC,GAAD,IAAS;AAChDH,MAAAA,QAAQ,CAACK,SAAS,CAACF,GAAG,CAACC,IAAL,CAAV,CAAR;AACAJ,MAAAA,QAAQ,CAACa,IAAI,CAAC,SAAD,CAAL,CAAR;AAED,KAJM,CAAP;AAKD,GAND;AAOD,CARM;AAUP,OAAO,MAAMC,WAAW,GAAIN,EAAD,IAAQ;AACjC,SAAO;AACLX,IAAAA,IAAI,EAAEH,WAAW,CAACqB,WADb;AAELC,IAAAA,QAAQ,EAAER;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAMS,UAAU,GAAIT,EAAD,IAAQ;AAChC,SAAQR,QAAD,IAAc;AACnB,WAAOP,KAAK,CAACyB,MAAN,CAAc,aAAYV,EAAG,GAA7B,EAAiCN,IAAjC,CAAuCC,GAAD,IAAS;AACpDH,MAAAA,QAAQ,CAACc,WAAW,CAACN,EAAD,CAAZ,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMW,WAAW,GAAIX,EAAD,IAAQ;AACjC,SAAO;AACLX,IAAAA,IAAI,EAAEH,WAAW,CAAC0B,WADb;AAELJ,IAAAA,QAAQ,EAAER;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAMa,UAAU,GAAIb,EAAD,IAAQ;AAChC,SAAQR,QAAD,IAAc;AACnB,WAAOP,KAAK,CAAC6B,GAAN,CAAW,aAAYd,EAAG,GAA1B,EAA8BN,IAA9B,CAAoCC,GAAD,IAAS;AACjDH,MAAAA,QAAQ,CAACmB,WAAW,CAACX,EAAD,CAAZ,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMe,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO;AACL3B,IAAAA,IAAI,EAAEH,WAAW,CAAC+B,QADb;AAELC,IAAAA,MAAM,EAAEF;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAInB,EAAD,IAAQ;AAC7B,SAAQR,QAAD,IAAc;AACnB,WAAOP,KAAK,CAACQ,GAAN,CAAW,aAAYO,EAAG,GAA1B,EAA8BN,IAA9B,CAAoCC,GAAD,IAAS;AACjDH,MAAAA,QAAQ,CAACuB,QAAQ,CAACpB,GAAG,CAACC,IAAL,CAAT,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD,CANM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"../action/actionType\";\n\nexport const getTodos_ = (todos) => {\n  return { type: actionTypes.GET_ALL, todos: todos };\n};\n\nexport const getTodos = () => {\n  return (dispatch) => {\n    return axios.get(`/api/todo/`).then((res) => dispatch(getTodos_(res.data)));\n  };\n};\n\nexport const postTodo_ = (td) => {\n  return {\n    type: actionTypes.ADD_TODO,\n    id: td.id,\n    title: td.title,\n    content: td.content,\n  };\n};\n\nexport const postTodo = (td) => {\n  return (dispatch) => {\n    return axios.post(`/api/todo/`, td).then((res) => {\n      dispatch(postTodo_(res.data));\n      dispatch(push('/todos/'));\n\n    });\n  };\n};\n\nexport const deleteTodo_ = (id) => {\n  return {\n    type: actionTypes.DELETE_TODO,\n    targetID: id,\n  };\n};\n\nexport const deleteTodo = (id) => {\n  return (dispatch) => {\n    return axios.delete(`/api/todo/${id}/`).then((res) => {\n      dispatch(deleteTodo_(id));\n    });\n  };\n};\n\nexport const toggleTodo_ = (id) => {\n  return {\n    type: actionTypes.TOGGLE_DONE,\n    targetID: id,\n  };\n};\n\nexport const toggleTodo = (id) => {\n  return (dispatch) => {\n    return axios.put(`/api/todo/${id}/`).then((res) => {\n      dispatch(toggleTodo_(id));\n    });\n  };\n};\n\nexport const getTodo_ = (todo) => {\n  return {\n    type: actionTypes.GET_TODO,\n    target: todo,\n  };\n};\n\nexport const getTodo = (id) => {\n  return (dispatch) => {\n    return axios.get(`/api/todo/${id}/`).then((res) => {\n      dispatch(getTodo_(res.data));\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}